public class LargeInteger {

	

	private byte[] value;

	

	public LargeInteger(String value) {

		this.value = value.getBytes();

		this.encode();

	}

	

	private LargeInteger(byte[] value) {

		this.value = value;

	}

	

	public void print() {

		for (int i = 0; i < value.length; i++) {

			System.out.print(value[i]);

		}

		System.out.println();

	}

	

	private void encode() {

		for (int i = 0; i < value.length; i++) {

			this.value[i] -= 48;		

		}

	}

	

	public static LargeInteger add(LargeInteger a, LargeInteger b) {

		byte[] result = new byte[a.value.length+1];

		byte sum = 0, carry = 0;

		

		for (int i = a.value.length; i > 0; i--) {

			sum = (byte) ((a.value[i-1] + b.value[i-1] + carry) % 10);

			result[i] = sum;

			carry = (byte) ((a.value[i-1] + b.value[i-1]) / 10);

		}

		

		result[0] = carry;

		return new LargeInteger(result);

	}

	

	public static LargeInteger ten_to_the_n(int n) {
		byte[]result=new byte[n+1];
		for(int i=0;i<result.length;i++){
				if(i==0){
				
			result[i]=1;}
			else {
				result[i]=0;}//this is so funny I HAD TO SOLVE IT LIKE THIS TO LOOK GREAT LOOL
		}
		
		
		

		return new LargeInteger(result);

	}

	

	public static LargeInteger subtract(LargeInteger a, LargeInteger b) {

		byte[] result = new byte[a.value.length+1];

		byte sub = 0, carry = 0;

		

		for (int i = a.value.length; i > 0; i--) {

			sub = (byte) ((a.value[i-1] - b.value[i-1] + carry) % 10);

			result[i] = sub;

			carry = (byte) ((a.value[i-1] - b.value[i-1]) / 10);}

		result[0] = carry;

		return new LargeInteger(result);
	}

	
	public static int compare(LargeInteger a, LargeInteger b) {//I THINK WE SHOULD WRITE IT IN THIS WAY. 
			for(int i=0;i<a.value.length-1;i++)
					
				if(a.value[i]<b.value[i])
					
					return -1;

		return 0;// CUZ THERE IS NO DIFFERENCE BETWEEN A>B AND A=B IN SUBTRACTION

	}

	

	public static LargeInteger multiply(LargeInteger a, LargeInteger b) {

		return null;

	}
	

}
